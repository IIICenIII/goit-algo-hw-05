def caching_fibonacci(): #створена зовнішня ф-ція для замикання.
    cache={} #створено пустий словник в який будуть записуватися дані з внутрішньої ф-ції.
    def fibonacci(n): #створена внутрішня функція в якій відбуватимуться обчислення.
        if n not in cache: # Якщо число ще не знаходиться в словнику, то його потрібно буде порахувати і додати.
            if n<=0:return 0 #перше число завжди 0. У випадку обчислень можуть бути від'ємні числа. Вони повертатимуть 0
            elif n==1:return 1 #друге число завжди 1 і це також слід урахувати при обчисленнях.
            else:cache[n]=fibonacci(n-1)+fibonacci(n-2) #обчислення числа Фібоначі і додавання його до словника.
        return cache[n] #повернення ф-цією числа фібоначі зі словника за його ключем, що дорівнює його порядковому числу.

    return fibonacci #повернення внутрішньої ф-кції, щоб замкнути зовнішню ф-цію

fib=caching_fibonacci() #змінна приймає значення зовнішньої ф-ції, щоб викликати її внутрішню ф-цію
print(fib(15)) #вивід на термінал значення 15-го числа Фібоначі за допомогою  ф-ції fibonacci(n) в caching_fibonacci() 

#Результат:
#Виведенням буде число 610, що означає що ф-ція успішно працює. Окрім того якщо значення вже викликалося, код спрацює швидше.